{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "8944d08f-b8bb-40ad-869d-cb5817778435",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import re\n",
    "import Levenshtein\n",
    "from datetime import datetime\n",
    "from thefuzz import process\n",
    "import os\n",
    "import yaml\n",
    "from utils import preprocess_desc, load_categories\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "39cf7c72-f226-4863-9191-fb70114203ef",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__spec__', 'load_categories', 'pd', 'preprocess_desc', 'spaceless_strings', 'yaml']\n"
     ]
    }
   ],
   "source": [
    "import utils\n",
    "print(dir(utils))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 102,
   "id": "3258794d-b19d-49eb-bfa6-371cf1d66eaf",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>row</th>\n",
       "      <th>date</th>\n",
       "      <th>description</th>\n",
       "      <th>euro_value</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>2024-11-15</td>\n",
       "      <td>AMAZON.DE..TR1HU8H74/LUXEMBOURG - NOTPROVIDED ...</td>\n",
       "      <td>11.99</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>2024-11-19</td>\n",
       "      <td>Charlotte Quirin                              ...</td>\n",
       "      <td>-15.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>2024-11-22</td>\n",
       "      <td>Charlotte Quirin                              ...</td>\n",
       "      <td>-3.90</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>2024-11-01</td>\n",
       "      <td>Charlotte Quirin - Charlotte Quirin und Filipp...</td>\n",
       "      <td>2000.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>2024-11-13</td>\n",
       "      <td>Charlotte Quirin - Landkorb GmbH + Co. KG - Li...</td>\n",
       "      <td>-66.49</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   row       date                                        description  \\\n",
       "0    0 2024-11-15  AMAZON.DE..TR1HU8H74/LUXEMBOURG - NOTPROVIDED ...   \n",
       "1    1 2024-11-19  Charlotte Quirin                              ...   \n",
       "2    2 2024-11-22  Charlotte Quirin                              ...   \n",
       "3    3 2024-11-01  Charlotte Quirin - Charlotte Quirin und Filipp...   \n",
       "4    4 2024-11-13  Charlotte Quirin - Landkorb GmbH + Co. KG - Li...   \n",
       "\n",
       "   euro_value  \n",
       "0       11.99  \n",
       "1      -15.00  \n",
       "2       -3.90  \n",
       "3     2000.00  \n",
       "4      -66.49  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "file_path = os.path.join('..', 'datasets', 'sample_dataset_transactions.csv')\n",
    "transactions = pd.read_csv(file_path, thousands=',', parse_dates=['date'])\n",
    "transactions_df = pd.DataFrame(data = transactions)\n",
    "display(transactions_df.head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 103,
   "id": "e380ccb4-31e6-4df8-9b96-06e93da27cd1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    amazon.de tr1hu8h74 luxembourg notprovided ama...\n",
       "1    charlotte quirin wollankstr. 126 congstar eine...\n",
       "2    charlotte quirin wollankstr. 126 paypal europe...\n",
       "3    charlotte quirin charlotte quirin filippo carr...\n",
       "4    charlotte quirin landkorb gmbh + co. kg liefer...\n",
       "Name: string_keywords, dtype: string"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# clean descriptions\n",
    "transactions_df['string_keywords'] = preprocess_desc(transactions_df)\n",
    "display(transactions_df['string_keywords'].head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "38651006-d956-42ce-92e9-72e5ca01b4df",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>category</th>\n",
       "      <th>brand</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>66</th>\n",
       "      <td>other</td>\n",
       "      <td>genericpayment</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>67</th>\n",
       "      <td>other</td>\n",
       "      <td>monthlytransfer</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>68</th>\n",
       "      <td>other</td>\n",
       "      <td>prelievo</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69</th>\n",
       "      <td>other</td>\n",
       "      <td>volksbank</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>70</th>\n",
       "      <td>other</td>\n",
       "      <td>monthly transfer common account</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   category                            brand\n",
       "66    other                   genericpayment\n",
       "67    other                  monthlytransfer\n",
       "68    other                         prelievo\n",
       "69    other                        volksbank\n",
       "70    other  monthly transfer common account"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# load categories\n",
    "cat_df = load_categories()\n",
    "display(cat_df.tail())\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "fa3e5f0d-19ad-4394-b998-2eba37a6cd3e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>string_match_brand</th>\n",
       "      <th>string_match_score</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>amazon.de tr1hu8h74 luxembourg notprovided amazon.de tr1hu8h74 lu</th>\n",
       "      <td>amazon</td>\n",
       "      <td>60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>charlotte quirin wollankstr. 126 congstar eine marke telekom deutschland gmbh landgrabenweg 151 congstar kundennummer rechnung</th>\n",
       "      <td>congstar</td>\n",
       "      <td>60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>charlotte quirin wollankstr. 126 paypal europe s.a.r.l. et s.c.a 22 24 boulevard royal, 2449 luxembourg pp.3039.pp . , einkauf</th>\n",
       "      <td>paypal</td>\n",
       "      <td>60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>charlotte quirin charlotte quirin filippo carraro monthly transfer common account</th>\n",
       "      <td>monthly transfer common account</td>\n",
       "      <td>90</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>charlotte quirin landkorb gmbh + co. kg lieferung 12.11.2024</th>\n",
       "      <td>landkorb</td>\n",
       "      <td>90</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                                 string_match_brand  \\\n",
       "amazon.de tr1hu8h74 luxembourg notprovided amaz...                           amazon   \n",
       "charlotte quirin wollankstr. 126 congstar eine ...                         congstar   \n",
       "charlotte quirin wollankstr. 126 paypal europe ...                           paypal   \n",
       "charlotte quirin charlotte quirin filippo carra...  monthly transfer common account   \n",
       "charlotte quirin landkorb gmbh + co. kg lieferu...                         landkorb   \n",
       "\n",
       "                                                    string_match_score  \n",
       "amazon.de tr1hu8h74 luxembourg notprovided amaz...                  60  \n",
       "charlotte quirin wollankstr. 126 congstar eine ...                  60  \n",
       "charlotte quirin wollankstr. 126 paypal europe ...                  60  \n",
       "charlotte quirin charlotte quirin filippo carra...                  90  \n",
       "charlotte quirin landkorb gmbh + co. kg lieferu...                  90  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# write the best match for each keyword\n",
    "best_matches = {}\n",
    "brands_list = categories['brand'].tolist()\n",
    "for keyword in transactions_df['string_keywords']:\n",
    "    best_match = process.extractOne(keyword, brands_list)\n",
    "    #print(f\"Keyword: {keyword}, Best Match: {best_match}\")  # Debugging\n",
    "    best_matches[keyword] = best_match\n",
    "best_matches = pd.DataFrame.from_dict(best_matches, orient='index', columns=('string_match_brand','string_match_score'))\n",
    "display(best_matches.head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "6db9cbd4-6a35-43b8-8d75-bd7d834b4cdb",
   "metadata": {},
   "outputs": [],
   "source": [
    "finance_data_score_df = pd.merge(transactions_df, best_matches, how='inner', right_index=True, left_on='string_keywords')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "e8e4c611-d08d-4aaf-a13d-2d5f5099837b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>row</th>\n",
       "      <th>date</th>\n",
       "      <th>description</th>\n",
       "      <th>euro_value</th>\n",
       "      <th>string_keywords</th>\n",
       "      <th>string_match_brand</th>\n",
       "      <th>string_match_score</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>2024-11-15</td>\n",
       "      <td>AMAZON.DE..TR1HU8H74/LUXEMBOURG - NOTPROVIDED ...</td>\n",
       "      <td>11.99</td>\n",
       "      <td>amazon.de tr1hu8h74 luxembourg notprovided ama...</td>\n",
       "      <td>amazon</td>\n",
       "      <td>60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>2024-11-19</td>\n",
       "      <td>Charlotte Quirin                              ...</td>\n",
       "      <td>-15.00</td>\n",
       "      <td>charlotte quirin wollankstr. 126 congstar eine...</td>\n",
       "      <td>congstar</td>\n",
       "      <td>60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>2024-11-22</td>\n",
       "      <td>Charlotte Quirin                              ...</td>\n",
       "      <td>-3.90</td>\n",
       "      <td>charlotte quirin wollankstr. 126 paypal europe...</td>\n",
       "      <td>paypal</td>\n",
       "      <td>60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>2024-11-01</td>\n",
       "      <td>Charlotte Quirin - Charlotte Quirin und Filipp...</td>\n",
       "      <td>2000.00</td>\n",
       "      <td>charlotte quirin charlotte quirin filippo carr...</td>\n",
       "      <td>monthly transfer common account</td>\n",
       "      <td>90</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>2024-11-13</td>\n",
       "      <td>Charlotte Quirin - Landkorb GmbH + Co. KG - Li...</td>\n",
       "      <td>-66.49</td>\n",
       "      <td>charlotte quirin landkorb gmbh + co. kg liefer...</td>\n",
       "      <td>landkorb</td>\n",
       "      <td>90</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   row       date                                        description  \\\n",
       "0    0 2024-11-15  AMAZON.DE..TR1HU8H74/LUXEMBOURG - NOTPROVIDED ...   \n",
       "1    1 2024-11-19  Charlotte Quirin                              ...   \n",
       "2    2 2024-11-22  Charlotte Quirin                              ...   \n",
       "3    3 2024-11-01  Charlotte Quirin - Charlotte Quirin und Filipp...   \n",
       "4    4 2024-11-13  Charlotte Quirin - Landkorb GmbH + Co. KG - Li...   \n",
       "\n",
       "   euro_value                                    string_keywords  \\\n",
       "0       11.99  amazon.de tr1hu8h74 luxembourg notprovided ama...   \n",
       "1      -15.00  charlotte quirin wollankstr. 126 congstar eine...   \n",
       "2       -3.90  charlotte quirin wollankstr. 126 paypal europe...   \n",
       "3     2000.00  charlotte quirin charlotte quirin filippo carr...   \n",
       "4      -66.49  charlotte quirin landkorb gmbh + co. kg liefer...   \n",
       "\n",
       "                string_match_brand  string_match_score  \n",
       "0                           amazon                  60  \n",
       "1                         congstar                  60  \n",
       "2                           paypal                  60  \n",
       "3  monthly transfer common account                  90  \n",
       "4                         landkorb                  90  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "display(finance_data_score_df.head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "id": "336aca42-19a5-44d9-81d7-0b3e686c75c5",
   "metadata": {},
   "outputs": [],
   "source": [
    "string_keywords_s = transactions_df['string_keywords'].str.split(expand=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "id": "a50e39fb-5d7b-4d3a-a00d-c2d3c9c5d3a6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>index</th>\n",
       "      <th>word_position</th>\n",
       "      <th>word</th>\n",
       "      <th>length</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>amazon.de</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>tr1hu8h74</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>luxembourg</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>notprovided</td>\n",
       "      <td>11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>amazon.de</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>432</th>\n",
       "      <td>99</td>\n",
       "      <td>12</td>\n",
       "      <td>hotline</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>433</th>\n",
       "      <td>99</td>\n",
       "      <td>13</td>\n",
       "      <td>bundesbank</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>434</th>\n",
       "      <td>99</td>\n",
       "      <td>14</td>\n",
       "      <td>(0800)</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>435</th>\n",
       "      <td>99</td>\n",
       "      <td>15</td>\n",
       "      <td>1234</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>436</th>\n",
       "      <td>99</td>\n",
       "      <td>16</td>\n",
       "      <td>111</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>437 rows × 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     index  word_position         word  length\n",
       "0        0              1    amazon.de       9\n",
       "1        0              2    tr1hu8h74       9\n",
       "2        0              3   luxembourg      10\n",
       "3        0              4  notprovided      11\n",
       "4        0              5    amazon.de       9\n",
       "..     ...            ...          ...     ...\n",
       "432     99             12      hotline       7\n",
       "433     99             13   bundesbank      10\n",
       "434     99             14       (0800)       6\n",
       "435     99             15         1234       4\n",
       "436     99             16          111       3\n",
       "\n",
       "[437 rows x 4 columns]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "dataset_keywords = pd.melt(string_keywords_s, ignore_index=False, var_name='word_position', value_name='word').dropna()\n",
    "dataset_keywords['word_position'] = dataset_keywords['word_position'] + 1\n",
    "\n",
    "dataset_keywords['length'] = dataset_keywords['word'].str.len()\n",
    "\n",
    "dataset_keywords.index.name = 'index'\n",
    "dataset_keywords.sort_values(by=['index', 'word_position'], inplace=True)\n",
    "dataset_keywords.astype('string')\n",
    "dataset_keywords.reset_index(inplace=True) # after reshaping, the index needs to be reset to avoid hierarchical indexes\n",
    "display(dataset_keywords)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "id": "676b33e0-d317-4486-b28e-774a29e663fa",
   "metadata": {},
   "outputs": [],
   "source": [
    "file_path = os.path.join('..', 'datasets', 'dataset_keywords_output.csv')\n",
    "dataset_keywords.to_csv(file_path, mode='w+')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "b0c93814-d2f9-4394-b023-1a5ad27ee708",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>category</th>\n",
       "      <th>brand</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1. house</td>\n",
       "      <td>lyckebohouse</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1. house</td>\n",
       "      <td>miete</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1. house</td>\n",
       "      <td>suewag</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2. shopping</td>\n",
       "      <td>amazon</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2. shopping</td>\n",
       "      <td>apotheke</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>66</th>\n",
       "      <td>3. food</td>\n",
       "      <td>kiez.kaffee.kraft</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>67</th>\n",
       "      <td>3. food</td>\n",
       "      <td>uber eats</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>68</th>\n",
       "      <td>5. transport</td>\n",
       "      <td>sellhelp</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69</th>\n",
       "      <td>6. leisure</td>\n",
       "      <td>museum naturkunde</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>70</th>\n",
       "      <td>3. food</td>\n",
       "      <td>9060 grafschaft</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>71 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        category               brand\n",
       "0       1. house        lyckebohouse\n",
       "1       1. house               miete\n",
       "2       1. house              suewag\n",
       "3    2. shopping              amazon\n",
       "4    2. shopping            apotheke\n",
       "..           ...                 ...\n",
       "66       3. food  kiez.kaffee.kraft \n",
       "67       3. food           uber eats\n",
       "68  5. transport            sellhelp\n",
       "69    6. leisure   museum naturkunde\n",
       "70       3. food     9060 grafschaft\n",
       "\n",
       "[71 rows x 2 columns]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# for each keyword match and calculate the distance\n",
    "display(categories)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "id": "11e406ba-e8b6-4ce2-96a9-8270a0431e20",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>word_in_desc</th>\n",
       "      <th>word_position</th>\n",
       "      <th>word_match_brand</th>\n",
       "      <th>word_match_distance</th>\n",
       "      <th>description_index</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>amazon.de</td>\n",
       "      <td>1</td>\n",
       "      <td>lyckebohouse</td>\n",
       "      <td>10</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>amazon.de</td>\n",
       "      <td>1</td>\n",
       "      <td>miete</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>amazon.de</td>\n",
       "      <td>1</td>\n",
       "      <td>suewag</td>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>amazon.de</td>\n",
       "      <td>1</td>\n",
       "      <td>amazon</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>amazon.de</td>\n",
       "      <td>1</td>\n",
       "      <td>apotheke</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31022</th>\n",
       "      <td>111</td>\n",
       "      <td>16</td>\n",
       "      <td>kiez.kaffee.kraft</td>\n",
       "      <td>18</td>\n",
       "      <td>99</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31023</th>\n",
       "      <td>111</td>\n",
       "      <td>16</td>\n",
       "      <td>uber eats</td>\n",
       "      <td>9</td>\n",
       "      <td>99</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31024</th>\n",
       "      <td>111</td>\n",
       "      <td>16</td>\n",
       "      <td>sellhelp</td>\n",
       "      <td>8</td>\n",
       "      <td>99</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31025</th>\n",
       "      <td>111</td>\n",
       "      <td>16</td>\n",
       "      <td>museum naturkunde</td>\n",
       "      <td>17</td>\n",
       "      <td>99</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31026</th>\n",
       "      <td>111</td>\n",
       "      <td>16</td>\n",
       "      <td>9060 grafschaft</td>\n",
       "      <td>15</td>\n",
       "      <td>99</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>31027 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      word_in_desc  word_position    word_match_brand  word_match_distance  \\\n",
       "0        amazon.de              1        lyckebohouse                   10   \n",
       "1        amazon.de              1               miete                    7   \n",
       "2        amazon.de              1              suewag                    9   \n",
       "3        amazon.de              1              amazon                    3   \n",
       "4        amazon.de              1            apotheke                    7   \n",
       "...            ...            ...                 ...                  ...   \n",
       "31022          111             16  kiez.kaffee.kraft                    18   \n",
       "31023          111             16           uber eats                    9   \n",
       "31024          111             16            sellhelp                    8   \n",
       "31025          111             16   museum naturkunde                   17   \n",
       "31026          111             16     9060 grafschaft                   15   \n",
       "\n",
       "       description_index  \n",
       "0                      0  \n",
       "1                      0  \n",
       "2                      0  \n",
       "3                      0  \n",
       "4                      0  \n",
       "...                  ...  \n",
       "31022                 99  \n",
       "31023                 99  \n",
       "31024                 99  \n",
       "31025                 99  \n",
       "31026                 99  \n",
       "\n",
       "[31027 rows x 5 columns]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "word_by_word_distance = []\n",
    "\n",
    "# Iterate through rows of dataset_keywords\n",
    "for _, row in dataset_keywords.iterrows():\n",
    "    word = row['word']\n",
    "    word_position = row['word_position']\n",
    "    index = row['index']\n",
    "    \n",
    "    # Compare with each brand in categories_df\n",
    "    for brand in categories['brand']:\n",
    "        distance = Levenshtein.distance(word, brand)\n",
    "        # Append a dictionary with the results\n",
    "        word_by_word_distance.append({\n",
    "            'word_in_desc': word,\n",
    "            'word_position': word_position,\n",
    "            'word_match_brand': brand,\n",
    "            'word_match_distance': distance,\n",
    "            'description_index': index\n",
    "        })\n",
    "\n",
    "# Convert the list of dictionaries into a DataFrame\n",
    "word_by_word_df = pd.DataFrame(word_by_word_distance)\n",
    "\n",
    "# Display the resulting DataFrame\n",
    "display(word_by_word_df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "646ed411-6b98-409e-8e82-8c66a61bd663",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "      word_in_desc  word_position word_match_brand  word_match_distance  \\\n",
      "3        amazon.de              1           amazon                    3   \n",
      "810       congstar              5         congstar                    0   \n",
      "1896        paypal              5           paypal                    0   \n",
      "3282       carraro              6         barkraft                    4   \n",
      "3786      landkorb              3         landkorb                    0   \n",
      "...            ...            ...              ...                  ...   \n",
      "26494      zalando              1          zalando                    0   \n",
      "26697       zettle              1            miete                    4   \n",
      "27154   telefonica              3       telefonica                    0   \n",
      "28220            s              3              bvg                    3   \n",
      "29959     sellhelp              1         sellhelp                    0   \n",
      "\n",
      "       description_index  \n",
      "3                      0  \n",
      "810                    1  \n",
      "1896                   2  \n",
      "3282                   3  \n",
      "3786                   4  \n",
      "...                  ...  \n",
      "26494                 95  \n",
      "26697                 96  \n",
      "27154                 97  \n",
      "28220                 98  \n",
      "29959                 99  \n",
      "\n",
      "[100 rows x 5 columns]\n"
     ]
    }
   ],
   "source": [
    "# Group by 'col1' and find the index of the minimum value in 'col2'\n",
    "min_distance = word_by_word_df.groupby(\"description_index\")[\"word_match_distance\"].idxmin()\n",
    "\n",
    "# Use the indices to filter the DataFrame\n",
    "best_word_match_df = word_by_word_df.loc[min_distance]\n",
    "\n",
    "# Display the result\n",
    "print(best_word_match_df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "id": "d287637d-2184-4ea0-9ce3-697adc8ae42e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>row</th>\n",
       "      <th>date</th>\n",
       "      <th>description</th>\n",
       "      <th>euro_value</th>\n",
       "      <th>string_keywords</th>\n",
       "      <th>string_match_brand</th>\n",
       "      <th>string_match_score</th>\n",
       "      <th>word_in_desc</th>\n",
       "      <th>word_position</th>\n",
       "      <th>word_match_brand</th>\n",
       "      <th>word_match_distance</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0</td>\n",
       "      <td>2024-11-15</td>\n",
       "      <td>AMAZON.DE..TR1HU8H74/LUXEMBOURG - NOTPROVIDED ...</td>\n",
       "      <td>11.99</td>\n",
       "      <td>amazon.de tr1hu8h74 luxembourg notprovided ama...</td>\n",
       "      <td>amazon</td>\n",
       "      <td>60</td>\n",
       "      <td>amazon.de</td>\n",
       "      <td>1</td>\n",
       "      <td>amazon</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>810</th>\n",
       "      <td>1</td>\n",
       "      <td>2024-11-19</td>\n",
       "      <td>Charlotte Quirin                              ...</td>\n",
       "      <td>-15.00</td>\n",
       "      <td>charlotte quirin wollankstr. 126 congstar eine...</td>\n",
       "      <td>congstar</td>\n",
       "      <td>60</td>\n",
       "      <td>congstar</td>\n",
       "      <td>5</td>\n",
       "      <td>congstar</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1896</th>\n",
       "      <td>2</td>\n",
       "      <td>2024-11-22</td>\n",
       "      <td>Charlotte Quirin                              ...</td>\n",
       "      <td>-3.90</td>\n",
       "      <td>charlotte quirin wollankstr. 126 paypal europe...</td>\n",
       "      <td>paypal</td>\n",
       "      <td>60</td>\n",
       "      <td>paypal</td>\n",
       "      <td>5</td>\n",
       "      <td>paypal</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3282</th>\n",
       "      <td>3</td>\n",
       "      <td>2024-11-01</td>\n",
       "      <td>Charlotte Quirin - Charlotte Quirin und Filipp...</td>\n",
       "      <td>2000.00</td>\n",
       "      <td>charlotte quirin charlotte quirin filippo carr...</td>\n",
       "      <td>monthly transfer common account</td>\n",
       "      <td>90</td>\n",
       "      <td>carraro</td>\n",
       "      <td>6</td>\n",
       "      <td>barkraft</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3786</th>\n",
       "      <td>4</td>\n",
       "      <td>2024-11-13</td>\n",
       "      <td>Charlotte Quirin - Landkorb GmbH + Co. KG - Li...</td>\n",
       "      <td>-66.49</td>\n",
       "      <td>charlotte quirin landkorb gmbh + co. kg liefer...</td>\n",
       "      <td>landkorb</td>\n",
       "      <td>90</td>\n",
       "      <td>landkorb</td>\n",
       "      <td>3</td>\n",
       "      <td>landkorb</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      row       date                                        description  \\\n",
       "3       0 2024-11-15  AMAZON.DE..TR1HU8H74/LUXEMBOURG - NOTPROVIDED ...   \n",
       "810     1 2024-11-19  Charlotte Quirin                              ...   \n",
       "1896    2 2024-11-22  Charlotte Quirin                              ...   \n",
       "3282    3 2024-11-01  Charlotte Quirin - Charlotte Quirin und Filipp...   \n",
       "3786    4 2024-11-13  Charlotte Quirin - Landkorb GmbH + Co. KG - Li...   \n",
       "\n",
       "      euro_value                                    string_keywords  \\\n",
       "3          11.99  amazon.de tr1hu8h74 luxembourg notprovided ama...   \n",
       "810       -15.00  charlotte quirin wollankstr. 126 congstar eine...   \n",
       "1896       -3.90  charlotte quirin wollankstr. 126 paypal europe...   \n",
       "3282     2000.00  charlotte quirin charlotte quirin filippo carr...   \n",
       "3786      -66.49  charlotte quirin landkorb gmbh + co. kg liefer...   \n",
       "\n",
       "                   string_match_brand  string_match_score word_in_desc  \\\n",
       "3                              amazon                  60    amazon.de   \n",
       "810                          congstar                  60     congstar   \n",
       "1896                           paypal                  60       paypal   \n",
       "3282  monthly transfer common account                  90      carraro   \n",
       "3786                         landkorb                  90     landkorb   \n",
       "\n",
       "      word_position word_match_brand  word_match_distance  \n",
       "3                 1           amazon                    3  \n",
       "810               5         congstar                    0  \n",
       "1896              5           paypal                    0  \n",
       "3282              6         barkraft                    4  \n",
       "3786              3         landkorb                    0  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "finance_matches_df = pd.merge(\n",
    "    finance_data_score_df, \n",
    "    best_word_match_df, \n",
    "    how='inner', \n",
    "    left_index=True, \n",
    "    right_on='description_index'\n",
    ")\n",
    "finance_matches_df.drop('description_index', axis=1, inplace=True)\n",
    "#finance_categorised_2_df.rename(columns={'brand_x':'brand'}, inplace=True)\n",
    "\n",
    "display(finance_matches_df.head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "id": "5746ce85-9d1c-4e19-b672-62bcdcca6e57",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>row</th>\n",
       "      <th>date</th>\n",
       "      <th>description</th>\n",
       "      <th>euro_value</th>\n",
       "      <th>string_keywords</th>\n",
       "      <th>string_match_brand</th>\n",
       "      <th>string_match_score</th>\n",
       "      <th>word_in_desc</th>\n",
       "      <th>word_position</th>\n",
       "      <th>word_match_brand</th>\n",
       "      <th>word_match_distance</th>\n",
       "      <th>methods_match</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0</td>\n",
       "      <td>2024-11-15</td>\n",
       "      <td>AMAZON.DE..TR1HU8H74/LUXEMBOURG - NOTPROVIDED ...</td>\n",
       "      <td>11.99</td>\n",
       "      <td>amazon.de tr1hu8h74 luxembourg notprovided ama...</td>\n",
       "      <td>amazon</td>\n",
       "      <td>60</td>\n",
       "      <td>amazon.de</td>\n",
       "      <td>1</td>\n",
       "      <td>amazon</td>\n",
       "      <td>3</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>810</th>\n",
       "      <td>1</td>\n",
       "      <td>2024-11-19</td>\n",
       "      <td>Charlotte Quirin                              ...</td>\n",
       "      <td>-15.00</td>\n",
       "      <td>charlotte quirin wollankstr. 126 congstar eine...</td>\n",
       "      <td>congstar</td>\n",
       "      <td>60</td>\n",
       "      <td>congstar</td>\n",
       "      <td>5</td>\n",
       "      <td>congstar</td>\n",
       "      <td>0</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1896</th>\n",
       "      <td>2</td>\n",
       "      <td>2024-11-22</td>\n",
       "      <td>Charlotte Quirin                              ...</td>\n",
       "      <td>-3.90</td>\n",
       "      <td>charlotte quirin wollankstr. 126 paypal europe...</td>\n",
       "      <td>paypal</td>\n",
       "      <td>60</td>\n",
       "      <td>paypal</td>\n",
       "      <td>5</td>\n",
       "      <td>paypal</td>\n",
       "      <td>0</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3282</th>\n",
       "      <td>3</td>\n",
       "      <td>2024-11-01</td>\n",
       "      <td>Charlotte Quirin - Charlotte Quirin und Filipp...</td>\n",
       "      <td>2000.00</td>\n",
       "      <td>charlotte quirin charlotte quirin filippo carr...</td>\n",
       "      <td>monthly transfer common account</td>\n",
       "      <td>90</td>\n",
       "      <td>carraro</td>\n",
       "      <td>6</td>\n",
       "      <td>barkraft</td>\n",
       "      <td>4</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3786</th>\n",
       "      <td>4</td>\n",
       "      <td>2024-11-13</td>\n",
       "      <td>Charlotte Quirin - Landkorb GmbH + Co. KG - Li...</td>\n",
       "      <td>-66.49</td>\n",
       "      <td>charlotte quirin landkorb gmbh + co. kg liefer...</td>\n",
       "      <td>landkorb</td>\n",
       "      <td>90</td>\n",
       "      <td>landkorb</td>\n",
       "      <td>3</td>\n",
       "      <td>landkorb</td>\n",
       "      <td>0</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      row       date                                        description  \\\n",
       "3       0 2024-11-15  AMAZON.DE..TR1HU8H74/LUXEMBOURG - NOTPROVIDED ...   \n",
       "810     1 2024-11-19  Charlotte Quirin                              ...   \n",
       "1896    2 2024-11-22  Charlotte Quirin                              ...   \n",
       "3282    3 2024-11-01  Charlotte Quirin - Charlotte Quirin und Filipp...   \n",
       "3786    4 2024-11-13  Charlotte Quirin - Landkorb GmbH + Co. KG - Li...   \n",
       "\n",
       "      euro_value                                    string_keywords  \\\n",
       "3          11.99  amazon.de tr1hu8h74 luxembourg notprovided ama...   \n",
       "810       -15.00  charlotte quirin wollankstr. 126 congstar eine...   \n",
       "1896       -3.90  charlotte quirin wollankstr. 126 paypal europe...   \n",
       "3282     2000.00  charlotte quirin charlotte quirin filippo carr...   \n",
       "3786      -66.49  charlotte quirin landkorb gmbh + co. kg liefer...   \n",
       "\n",
       "                   string_match_brand  string_match_score word_in_desc  \\\n",
       "3                              amazon                  60    amazon.de   \n",
       "810                          congstar                  60     congstar   \n",
       "1896                           paypal                  60       paypal   \n",
       "3282  monthly transfer common account                  90      carraro   \n",
       "3786                         landkorb                  90     landkorb   \n",
       "\n",
       "      word_position word_match_brand  word_match_distance  methods_match  \n",
       "3                 1           amazon                    3           True  \n",
       "810               5         congstar                    0           True  \n",
       "1896              5           paypal                    0           True  \n",
       "3282              6         barkraft                    4          False  \n",
       "3786              3         landkorb                    0           True  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "finance_matches_df['methods_match'] = False\n",
    "finance_matches_df.loc[finance_matches_df['string_match_brand'] == finance_matches_df['word_match_brand'], 'methods_match'] = True\n",
    "display(finance_matches_df.head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "id": "f781fbf9-7941-4c2f-938e-27b6222a535a",
   "metadata": {},
   "outputs": [],
   "source": [
    "# logic of word assignation\n",
    "# layer 01: if methods_match = True, then good\n",
    "# layer 02: if methods_match = False, if word_match_distance = 0, then word_match_brand\n",
    "# layer 03: if methods_match = False and word_match_distance >= 1 and string_match_score > 80, then string_match_brand\n",
    "# layer 04: else \"unassagined\"\n",
    "\n",
    "\n",
    "def categorisation_logi(row):\n",
    "    if row['methods_match']:\n",
    "        return row['string_match_brand']\n",
    "    elif row['word_match_distance'] == 0:\n",
    "        return row['word_match_brand']\n",
    "    elif row['string_match_score'] > 80:\n",
    "        return row ['string_match_brand']\n",
    "    else:\n",
    "        return '*unassigned*'\n",
    "\n",
    "finance_matches_df['brand_final'] = finance_matches_df.apply(categorisation_logi, axis=1)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "id": "b5a4ab36-ad01-4f1c-afda-c882188f6068",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>row</th>\n",
       "      <th>date</th>\n",
       "      <th>description</th>\n",
       "      <th>euro_value</th>\n",
       "      <th>string_keywords</th>\n",
       "      <th>string_match_brand</th>\n",
       "      <th>string_match_score</th>\n",
       "      <th>word_in_desc</th>\n",
       "      <th>word_position</th>\n",
       "      <th>word_match_brand</th>\n",
       "      <th>word_match_distance</th>\n",
       "      <th>methods_match</th>\n",
       "      <th>brand_final</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0</td>\n",
       "      <td>2024-11-15</td>\n",
       "      <td>AMAZON.DE..TR1HU8H74/LUXEMBOURG - NOTPROVIDED ...</td>\n",
       "      <td>11.99</td>\n",
       "      <td>amazon.de tr1hu8h74 luxembourg notprovided ama...</td>\n",
       "      <td>amazon</td>\n",
       "      <td>60</td>\n",
       "      <td>amazon.de</td>\n",
       "      <td>1</td>\n",
       "      <td>amazon</td>\n",
       "      <td>3</td>\n",
       "      <td>True</td>\n",
       "      <td>amazon</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>810</th>\n",
       "      <td>1</td>\n",
       "      <td>2024-11-19</td>\n",
       "      <td>Charlotte Quirin                              ...</td>\n",
       "      <td>-15.00</td>\n",
       "      <td>charlotte quirin wollankstr. 126 congstar eine...</td>\n",
       "      <td>congstar</td>\n",
       "      <td>60</td>\n",
       "      <td>congstar</td>\n",
       "      <td>5</td>\n",
       "      <td>congstar</td>\n",
       "      <td>0</td>\n",
       "      <td>True</td>\n",
       "      <td>congstar</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1896</th>\n",
       "      <td>2</td>\n",
       "      <td>2024-11-22</td>\n",
       "      <td>Charlotte Quirin                              ...</td>\n",
       "      <td>-3.90</td>\n",
       "      <td>charlotte quirin wollankstr. 126 paypal europe...</td>\n",
       "      <td>paypal</td>\n",
       "      <td>60</td>\n",
       "      <td>paypal</td>\n",
       "      <td>5</td>\n",
       "      <td>paypal</td>\n",
       "      <td>0</td>\n",
       "      <td>True</td>\n",
       "      <td>paypal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3282</th>\n",
       "      <td>3</td>\n",
       "      <td>2024-11-01</td>\n",
       "      <td>Charlotte Quirin - Charlotte Quirin und Filipp...</td>\n",
       "      <td>2000.00</td>\n",
       "      <td>charlotte quirin charlotte quirin filippo carr...</td>\n",
       "      <td>monthly transfer common account</td>\n",
       "      <td>90</td>\n",
       "      <td>carraro</td>\n",
       "      <td>6</td>\n",
       "      <td>barkraft</td>\n",
       "      <td>4</td>\n",
       "      <td>False</td>\n",
       "      <td>monthly transfer common account</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3786</th>\n",
       "      <td>4</td>\n",
       "      <td>2024-11-13</td>\n",
       "      <td>Charlotte Quirin - Landkorb GmbH + Co. KG - Li...</td>\n",
       "      <td>-66.49</td>\n",
       "      <td>charlotte quirin landkorb gmbh + co. kg liefer...</td>\n",
       "      <td>landkorb</td>\n",
       "      <td>90</td>\n",
       "      <td>landkorb</td>\n",
       "      <td>3</td>\n",
       "      <td>landkorb</td>\n",
       "      <td>0</td>\n",
       "      <td>True</td>\n",
       "      <td>landkorb</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      row       date                                        description  \\\n",
       "3       0 2024-11-15  AMAZON.DE..TR1HU8H74/LUXEMBOURG - NOTPROVIDED ...   \n",
       "810     1 2024-11-19  Charlotte Quirin                              ...   \n",
       "1896    2 2024-11-22  Charlotte Quirin                              ...   \n",
       "3282    3 2024-11-01  Charlotte Quirin - Charlotte Quirin und Filipp...   \n",
       "3786    4 2024-11-13  Charlotte Quirin - Landkorb GmbH + Co. KG - Li...   \n",
       "\n",
       "      euro_value                                    string_keywords  \\\n",
       "3          11.99  amazon.de tr1hu8h74 luxembourg notprovided ama...   \n",
       "810       -15.00  charlotte quirin wollankstr. 126 congstar eine...   \n",
       "1896       -3.90  charlotte quirin wollankstr. 126 paypal europe...   \n",
       "3282     2000.00  charlotte quirin charlotte quirin filippo carr...   \n",
       "3786      -66.49  charlotte quirin landkorb gmbh + co. kg liefer...   \n",
       "\n",
       "                   string_match_brand  string_match_score word_in_desc  \\\n",
       "3                              amazon                  60    amazon.de   \n",
       "810                          congstar                  60     congstar   \n",
       "1896                           paypal                  60       paypal   \n",
       "3282  monthly transfer common account                  90      carraro   \n",
       "3786                         landkorb                  90     landkorb   \n",
       "\n",
       "      word_position word_match_brand  word_match_distance  methods_match  \\\n",
       "3                 1           amazon                    3           True   \n",
       "810               5         congstar                    0           True   \n",
       "1896              5           paypal                    0           True   \n",
       "3282              6         barkraft                    4          False   \n",
       "3786              3         landkorb                    0           True   \n",
       "\n",
       "                          brand_final  \n",
       "3                              amazon  \n",
       "810                          congstar  \n",
       "1896                           paypal  \n",
       "3282  monthly transfer common account  \n",
       "3786                         landkorb  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "display(finance_matches_df.head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "id": "0a303e06-1acb-475f-978f-f84580767048",
   "metadata": {},
   "outputs": [],
   "source": [
    "file_path = os.path.join('..', 'datasets', 'finance_matches_df_output.csv')\n",
    "finance_matches_df.to_csv(file_path)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "181ca707-5a40-428a-a597-c005382a3d20",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "0c7ccc88-a6ee-46d4-af20-0f188a04c34f",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.13.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
